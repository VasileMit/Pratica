
Led.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000094  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  000000e8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  000000e8  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000118  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000020  00000000  00000000  00000154  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000642  00000000  00000000  00000174  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000536  00000000  00000000  000007b6  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000274  00000000  00000000  00000cec  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000024  00000000  00000000  00000f60  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000002e9  00000000  00000000  00000f84  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000000d8  00000000  00000000  0000126d  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000010  00000000  00000000  00001345  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	12 c0       	rjmp	.+36     	; 0x26 <__ctors_end>
   2:	19 c0       	rjmp	.+50     	; 0x36 <__bad_interrupt>
   4:	18 c0       	rjmp	.+48     	; 0x36 <__bad_interrupt>
   6:	17 c0       	rjmp	.+46     	; 0x36 <__bad_interrupt>
   8:	16 c0       	rjmp	.+44     	; 0x36 <__bad_interrupt>
   a:	15 c0       	rjmp	.+42     	; 0x36 <__bad_interrupt>
   c:	14 c0       	rjmp	.+40     	; 0x36 <__bad_interrupt>
   e:	13 c0       	rjmp	.+38     	; 0x36 <__bad_interrupt>
  10:	12 c0       	rjmp	.+36     	; 0x36 <__bad_interrupt>
  12:	11 c0       	rjmp	.+34     	; 0x36 <__bad_interrupt>
  14:	10 c0       	rjmp	.+32     	; 0x36 <__bad_interrupt>
  16:	0f c0       	rjmp	.+30     	; 0x36 <__bad_interrupt>
  18:	0e c0       	rjmp	.+28     	; 0x36 <__bad_interrupt>
  1a:	0d c0       	rjmp	.+26     	; 0x36 <__bad_interrupt>
  1c:	0c c0       	rjmp	.+24     	; 0x36 <__bad_interrupt>
  1e:	0b c0       	rjmp	.+22     	; 0x36 <__bad_interrupt>
  20:	0a c0       	rjmp	.+20     	; 0x36 <__bad_interrupt>
  22:	09 c0       	rjmp	.+18     	; 0x36 <__bad_interrupt>
  24:	08 c0       	rjmp	.+16     	; 0x36 <__bad_interrupt>

00000026 <__ctors_end>:
  26:	11 24       	eor	r1, r1
  28:	1f be       	out	0x3f, r1	; 63
  2a:	cf e5       	ldi	r28, 0x5F	; 95
  2c:	d4 e0       	ldi	r29, 0x04	; 4
  2e:	de bf       	out	0x3e, r29	; 62
  30:	cd bf       	out	0x3d, r28	; 61
  32:	02 d0       	rcall	.+4      	; 0x38 <main>
  34:	2d c0       	rjmp	.+90     	; 0x90 <_exit>

00000036 <__bad_interrupt>:
  36:	e4 cf       	rjmp	.-56     	; 0x0 <__vectors>

00000038 <main>:
#define F_CPU 1000000
#include <avr/io.h>
#include <util/delay.h>

int main(void)
{DDRB=0xFF;
  38:	8f ef       	ldi	r24, 0xFF	; 255
  3a:	87 bb       	out	0x17, r24	; 23

while(1)
{
	PORTB=0x0F;
  3c:	8f e0       	ldi	r24, 0x0F	; 15
  3e:	88 bb       	out	0x18, r24	; 24
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  40:	2f e7       	ldi	r18, 0x7F	; 127
  42:	38 e3       	ldi	r19, 0x38	; 56
  44:	91 e0       	ldi	r25, 0x01	; 1
  46:	21 50       	subi	r18, 0x01	; 1
  48:	30 40       	sbci	r19, 0x00	; 0
  4a:	90 40       	sbci	r25, 0x00	; 0
  4c:	e1 f7       	brne	.-8      	; 0x46 <__SREG__+0x7>
  4e:	00 c0       	rjmp	.+0      	; 0x50 <__SREG__+0x11>
  50:	00 00       	nop
	_delay_ms(400);
	PORTB=0x0;
  52:	18 ba       	out	0x18, r1	; 24
  54:	2f e7       	ldi	r18, 0x7F	; 127
  56:	38 e3       	ldi	r19, 0x38	; 56
  58:	91 e0       	ldi	r25, 0x01	; 1
  5a:	21 50       	subi	r18, 0x01	; 1
  5c:	30 40       	sbci	r19, 0x00	; 0
  5e:	90 40       	sbci	r25, 0x00	; 0
  60:	e1 f7       	brne	.-8      	; 0x5a <__SREG__+0x1b>
  62:	00 c0       	rjmp	.+0      	; 0x64 <__SREG__+0x25>
  64:	00 00       	nop
	_delay_ms(400);
	PORTB=0x0F;
  66:	88 bb       	out	0x18, r24	; 24
  68:	2f e3       	ldi	r18, 0x3F	; 63
  6a:	3d e0       	ldi	r19, 0x0D	; 13
  6c:	83 e0       	ldi	r24, 0x03	; 3
  6e:	21 50       	subi	r18, 0x01	; 1
  70:	30 40       	sbci	r19, 0x00	; 0
  72:	80 40       	sbci	r24, 0x00	; 0
  74:	e1 f7       	brne	.-8      	; 0x6e <__SREG__+0x2f>
  76:	00 c0       	rjmp	.+0      	; 0x78 <__SREG__+0x39>
  78:	00 00       	nop
	_delay_ms(1000);
	PORTB=0x0;
  7a:	18 ba       	out	0x18, r1	; 24
  7c:	9f e3       	ldi	r25, 0x3F	; 63
  7e:	2d e0       	ldi	r18, 0x0D	; 13
  80:	33 e0       	ldi	r19, 0x03	; 3
  82:	91 50       	subi	r25, 0x01	; 1
  84:	20 40       	sbci	r18, 0x00	; 0
  86:	30 40       	sbci	r19, 0x00	; 0
  88:	e1 f7       	brne	.-8      	; 0x82 <__SREG__+0x43>
  8a:	00 c0       	rjmp	.+0      	; 0x8c <__SREG__+0x4d>
  8c:	00 00       	nop
  8e:	d6 cf       	rjmp	.-84     	; 0x3c <main+0x4>

00000090 <_exit>:
  90:	f8 94       	cli

00000092 <__stop_program>:
  92:	ff cf       	rjmp	.-2      	; 0x92 <__stop_program>
